<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0617.1133                               -->
<workbook original-version='18.1' source-build='2021.1.3 (20211.21.0617.1133)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (salary_data_states_corrected)' inline='true' name='federated.004rffa0wr2hue14pxiry0mqlsc0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='salary_data_states_corrected' name='excel-direct.17585kq0crdhwe1g4epx51ub02sc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/thong/OneDrive/Desktop/Tableau/salary_data_states_corrected.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17585kq0crdhwe1g4epx51ub02sc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='CASE_NUMBER' ordinal='0' />
            <column datatype='string' name='CASE_STATUS' ordinal='1' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='CASE_RECEIVED_DATE' ordinal='2' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='DECISION_DATE' ordinal='3' />
            <column datatype='string' name='EMPLOYER_NAME' ordinal='4' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED' ordinal='5' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED_UNIT' ordinal='6' />
            <column datatype='real' name='PAID_WAGE_SUBMITTED' ordinal='7' />
            <column datatype='string' name='PAID_WAGE_SUBMITTED_UNIT' ordinal='8' />
            <column datatype='string' name='JOB_TITLE' ordinal='9' />
            <column datatype='string' name='WORK_CITY' ordinal='10' />
            <column datatype='string' name='EDUCATION_LEVEL_REQUIRED' ordinal='11' />
            <column datatype='string' name='COLLEGE_MAJOR_REQUIRED' ordinal='12' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_Y_N' ordinal='13' />
            <column datatype='integer' name='EXPERIENCE_REQUIRED_NUM_MONTHS' ordinal='14' />
            <column datatype='string' name='COUNTRY_OF_CITIZENSHIP' ordinal='15' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_CODE' ordinal='16' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_TITLE' ordinal='17' />
            <column datatype='string' name='WORK_STATE' ordinal='18' />
            <column datatype='string' name='WORK_STATE_ABBREVIATION' ordinal='19' />
            <column datatype='string' name='WORK_POSTAL_CODE' ordinal='20' />
            <column datatype='string' name='FULL_TIME_POSITION_Y_N' ordinal='21' />
            <column datatype='string' name='VISA_CLASS' ordinal='22' />
            <column datatype='real' name='PREVAILING_WAGE_PER_YEAR' ordinal='23' />
            <column datatype='real' name='PAID_WAGE_PER_YEAR' ordinal='24' />
            <column datatype='string' name='JOB_TITLE_SUBGROUP' ordinal='25' />
            <column datatype='integer' name='order' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17585kq0crdhwe1g4epx51ub02sc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='CASE_NUMBER' ordinal='0' />
            <column datatype='string' name='CASE_STATUS' ordinal='1' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='CASE_RECEIVED_DATE' ordinal='2' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='DECISION_DATE' ordinal='3' />
            <column datatype='string' name='EMPLOYER_NAME' ordinal='4' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED' ordinal='5' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED_UNIT' ordinal='6' />
            <column datatype='real' name='PAID_WAGE_SUBMITTED' ordinal='7' />
            <column datatype='string' name='PAID_WAGE_SUBMITTED_UNIT' ordinal='8' />
            <column datatype='string' name='JOB_TITLE' ordinal='9' />
            <column datatype='string' name='WORK_CITY' ordinal='10' />
            <column datatype='string' name='EDUCATION_LEVEL_REQUIRED' ordinal='11' />
            <column datatype='string' name='COLLEGE_MAJOR_REQUIRED' ordinal='12' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_Y_N' ordinal='13' />
            <column datatype='integer' name='EXPERIENCE_REQUIRED_NUM_MONTHS' ordinal='14' />
            <column datatype='string' name='COUNTRY_OF_CITIZENSHIP' ordinal='15' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_CODE' ordinal='16' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_TITLE' ordinal='17' />
            <column datatype='string' name='WORK_STATE' ordinal='18' />
            <column datatype='string' name='WORK_STATE_ABBREVIATION' ordinal='19' />
            <column datatype='string' name='WORK_POSTAL_CODE' ordinal='20' />
            <column datatype='string' name='FULL_TIME_POSITION_Y_N' ordinal='21' />
            <column datatype='string' name='VISA_CLASS' ordinal='22' />
            <column datatype='real' name='PREVAILING_WAGE_PER_YEAR' ordinal='23' />
            <column datatype='real' name='PAID_WAGE_PER_YEAR' ordinal='24' />
            <column datatype='string' name='JOB_TITLE_SUBGROUP' ordinal='25' />
            <column datatype='integer' name='order' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>12</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA10001:no:A1:AA2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_NUMBER</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_NUMBER]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_NUMBER</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_STATUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_STATUS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_STATUS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_RECEIVED_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CASE_RECEIVED_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_RECEIVED_DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DECISION_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DECISION_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DECISION_DATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYER_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EMPLOYER_NAME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EMPLOYER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_CITY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_CITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EDUCATION_LEVEL_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EDUCATION_LEVEL_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EDUCATION_LEVEL_REQUIRED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COLLEGE_MAJOR_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COLLEGE_MAJOR_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COLLEGE_MAJOR_REQUIRED</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_Y_N</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_NUM_MONTHS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_OF_CITIZENSHIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_OF_CITIZENSHIP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COUNTRY_OF_CITIZENSHIP</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_CODE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_TITLE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE_ABBREVIATION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE_ABBREVIATION]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE_ABBREVIATION</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_POSTAL_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_POSTAL_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_POSTAL_CODE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FULL_TIME_POSITION_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FULL_TIME_POSITION_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FULL_TIME_POSITION_Y_N</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VISA_CLASS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VISA_CLASS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>VISA_CLASS</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PREVAILING_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_PER_YEAR</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAID_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_PER_YEAR</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE_SUBGROUP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE_SUBGROUP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE_SUBGROUP</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>order</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case Number' datatype='string' name='[CASE_NUMBER]' role='dimension' type='nominal' />
      <column caption='Case Received Date' datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
      <column caption='Case Status' datatype='string' name='[CASE_STATUS]' role='dimension' type='nominal' />
      <column caption='College Major Required' datatype='string' name='[COLLEGE_MAJOR_REQUIRED]' role='dimension' type='nominal' />
      <column caption='Country Of Citizenship' datatype='string' name='[COUNTRY_OF_CITIZENSHIP]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Rank' datatype='integer' name='[Calculation_1114640975893086209]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='States we are interested in' datatype='string' name='[Calculation_1114640975895097346]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [WORK_STATE] = &quot;California&quot;&#13;&#10;OR [WORK_STATE] = &quot;Washington&quot;&#13;&#10;OR [WORK_STATE] = &quot;Texas&quot;&#13;&#10;OR [WORK_STATE] = &quot;Alabama&quot;&#13;&#10;OR [WORK_STATE] = &quot;North Carolina&quot;&#13;&#10;OR [WORK_STATE] = &quot;New York&quot;&#13;&#10;OR [WORK_STATE] = &quot;Massachusetts&quot;&#13;&#10;OR [WORK_STATE] = &quot;Maine&quot;&#13;&#10;THEN &quot;View&quot;&#13;&#10;ELSE &quot;Don&apos;t View&quot;&#13;&#10;END' />
      </column>
      <column caption='Difference btwn prevailing wage and paid wage' datatype='real' name='[Calculation_1114640975898054659]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR] - [PREVAILING_WAGE_PER_YEAR]' />
      </column>
      <column caption='Paying less than prevailing wage' datatype='string' name='[Calculation_1114640975898562564]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1114640975898054659] &lt; 0&#13;&#10;THEN &quot;Paying less than prevailing wage&quot;&#13;&#10;ELSE &quot;Paying prevailing wage or higher&quot;&#13;&#10;END' />
      </column>
      <column caption='Adjusted paid wage' datatype='real' name='[Calculation_1114640976280330245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR]) / ATTR([federated.1d1p75w11ycw4k1gr9r7v1m6x57i].[Price Parity])) * 100' />
      </column>
      <column caption='In Top X?' datatype='boolean' name='[Calculation_1114640976291721225]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK([Calculation_1114640976280330245]) &lt;= [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Case Number (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[CASE_NUMBER]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;I-200-13077-839340, I-200-13081-043757, I-200-13081-136705 and 2 more&quot;'>
            <value>&quot;I-200-13077-839340&quot;</value>
            <value>&quot;I-200-13081-043757&quot;</value>
            <value>&quot;I-200-13081-136705&quot;</value>
            <value>&quot;I-200-13087-022976&quot;</value>
            <value>&quot;I-203-14021-228428&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Decision Date' datatype='date' name='[DECISION_DATE]' role='dimension' type='ordinal' />
      <column caption='Education Level Required' datatype='string' name='[EDUCATION_LEVEL_REQUIRED]' role='dimension' type='nominal' />
      <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
      <column caption='Experience Required Num Months' datatype='integer' name='[EXPERIENCE_REQUIRED_NUM_MONTHS]' role='dimension' type='ordinal' />
      <column caption='Experience Required Y N' datatype='string' name='[EXPERIENCE_REQUIRED_Y_N]' role='dimension' type='nominal' />
      <column caption='Full Time Position Y N' datatype='string' name='[FULL_TIME_POSITION_Y_N]' role='dimension' type='nominal' />
      <column caption='Job Title' datatype='string' name='[JOB_TITLE]' role='dimension' type='nominal' />
      <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
      <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Paid Wage Submitted' datatype='real' name='[PAID_WAGE_SUBMITTED]' role='measure' type='quantitative' />
      <column caption='Paid Wage Submitted Unit' datatype='string' name='[PAID_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column aggregation='Median' caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column caption='Prevailing Wage Soc Code' datatype='string' name='[PREVAILING_WAGE_SOC_CODE]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Soc Title' datatype='string' name='[PREVAILING_WAGE_SOC_TITLE]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Submitted' datatype='string' name='[PREVAILING_WAGE_SUBMITTED]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Submitted Unit' datatype='string' name='[PREVAILING_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column caption='Visa Class' datatype='string' name='[VISA_CLASS]' role='dimension' type='nominal' />
      <column caption='Work City' datatype='string' name='[WORK_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Work Postal Code' datatype='string' name='[WORK_POSTAL_CODE]' role='dimension' type='nominal' />
      <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Work State Abbreviation' datatype='string' name='[WORK_STATE_ABBREVIATION]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Work State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[WORK_STATE]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;ALABAMA&quot;'>
            <value>&quot;AL&quot;</value>
            <value>&quot;ALABAMA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;CALIFORNIA&quot;'>
            <value>&quot;CA&quot;</value>
            <value>&quot;CALIFORNIA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;COLORADO&quot;'>
            <value>&quot;CO&quot;</value>
            <value>&quot;COLORADO&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;MAINE&quot;'>
            <value>&quot;MAINE&quot;</value>
            <value>&quot;ME&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;MASSACHUSETTS&quot;'>
            <value>&quot;MA&quot;</value>
            <value>&quot;MASSACHUSETTS&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;NEW HAMPSHIRE&quot;'>
            <value>&quot;NEW HAMPSHIRE&quot;</value>
            <value>&quot;NH&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;NEW YORK&quot;'>
            <value>&quot;NEW YORK&quot;</value>
            <value>&quot;NY&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;NORTH CAROLINA&quot;'>
            <value>&quot;NC&quot;</value>
            <value>&quot;NORTH CAROLINA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;TEXAS&quot;'>
            <value>&quot;TEXAS&quot;</value>
            <value>&quot;TX&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;WASHINGTON&quot;'>
            <value>&quot;WA&quot;</value>
            <value>&quot;WASHINGTON&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]' role='measure' type='quantitative' />
      <column caption='Order' datatype='integer' name='[order]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_2010FBD98FA040F29494BE5E5DA5F978:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[diff:usr:Calculation_1114640976280330245:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[diff:usr:Calculation_1114640976280330245:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:10]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:11]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Descending' type='Rank'>
          <order field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
          <order field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]' />
          <order field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:EMPLOYER_NAME:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:12]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Descending' type='Rank'>
          <order field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
          <order field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:EMPLOYER_NAME:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:13]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:EMPLOYER_NAME:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:14]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Descending' type='Rank'>
          <order field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]' />
          <order field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:EMPLOYER_NAME:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:15]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:16]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[EMPLOYER_NAME]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:17]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[JOB_TITLE_SUBGROUP]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Descending' type='Rank'>
          <order field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
          <order field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[WORK_STATE]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-type='PaneCol' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Pane' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Sum' name='[sum:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PREVAILING_WAGE_PER_YEAR]' derivation='Sum' name='[sum:PREVAILING_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[order]' derivation='Sum' name='[sum:order:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[usr:Calculation_1114640976280330245:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Job Title Subgroup,Work State)' hidden='true' name='[Action (Job Title Subgroup,Work State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[JOB_TITLE_SUBGROUP]' />
          <groupfilter function='level-members' level='[WORK_STATE]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Case Number (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;I-200-13077-839340, I-200-13081-043757, I-200-13081-136705 and 2 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[__tableau_internal_object_id__].[cnt:Sheet1_2010FBD98FA040F29494BE5E5DA5F978:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[sum:PAID_WAGE_PER_YEAR:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[sum:order:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[sum:PREVAILING_WAGE_PER_YEAR:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:WORK_STATE:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:JOB_TITLE_SUBGROUP:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;assistant professor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;data scientist&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;data analyst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;software engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;business analyst&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;management consultant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;attorney&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;teacher&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[diff:usr:Calculation_1114640976280330245:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[diff:usr:Calculation_1114640976280330245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:10]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:11]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:12]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:13]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:14]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:15]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:16]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:17]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk:9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976280330245:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1d1p75w11ycw4k1gr9r7v1m6x57i'>
        <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2010FBD98FA040F29494BE5E5DA5F978'>
            <properties context=''>
              <relation connection='excel-direct.17585kq0crdhwe1g4epx51ub02sc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
                  <column datatype='string' name='CASE_NUMBER' ordinal='0' />
                  <column datatype='string' name='CASE_STATUS' ordinal='1' />
                  <column datatype='date' date-parse-format='MM/dd/yyyy' name='CASE_RECEIVED_DATE' ordinal='2' />
                  <column datatype='date' date-parse-format='MM/dd/yyyy' name='DECISION_DATE' ordinal='3' />
                  <column datatype='string' name='EMPLOYER_NAME' ordinal='4' />
                  <column datatype='string' name='PREVAILING_WAGE_SUBMITTED' ordinal='5' />
                  <column datatype='string' name='PREVAILING_WAGE_SUBMITTED_UNIT' ordinal='6' />
                  <column datatype='real' name='PAID_WAGE_SUBMITTED' ordinal='7' />
                  <column datatype='string' name='PAID_WAGE_SUBMITTED_UNIT' ordinal='8' />
                  <column datatype='string' name='JOB_TITLE' ordinal='9' />
                  <column datatype='string' name='WORK_CITY' ordinal='10' />
                  <column datatype='string' name='EDUCATION_LEVEL_REQUIRED' ordinal='11' />
                  <column datatype='string' name='COLLEGE_MAJOR_REQUIRED' ordinal='12' />
                  <column datatype='string' name='EXPERIENCE_REQUIRED_Y_N' ordinal='13' />
                  <column datatype='integer' name='EXPERIENCE_REQUIRED_NUM_MONTHS' ordinal='14' />
                  <column datatype='string' name='COUNTRY_OF_CITIZENSHIP' ordinal='15' />
                  <column datatype='string' name='PREVAILING_WAGE_SOC_CODE' ordinal='16' />
                  <column datatype='string' name='PREVAILING_WAGE_SOC_TITLE' ordinal='17' />
                  <column datatype='string' name='WORK_STATE' ordinal='18' />
                  <column datatype='string' name='WORK_STATE_ABBREVIATION' ordinal='19' />
                  <column datatype='string' name='WORK_POSTAL_CODE' ordinal='20' />
                  <column datatype='string' name='FULL_TIME_POSITION_Y_N' ordinal='21' />
                  <column datatype='string' name='VISA_CLASS' ordinal='22' />
                  <column datatype='real' name='PREVAILING_WAGE_PER_YEAR' ordinal='23' />
                  <column datatype='real' name='PAID_WAGE_PER_YEAR' ordinal='24' />
                  <column datatype='string' name='JOB_TITLE_SUBGROUP' ordinal='25' />
                  <column datatype='integer' name='order' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (price_parity)' inline='true' name='federated.1d1p75w11ycw4k1gr9r7v1m6x57i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='price_parity' name='excel-direct.1793oh10w9cswx11p1wmx0yyv04x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/thong/OneDrive/Desktop/Tableau/price_parity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1793oh10w9cswx11p1wmx0yyv04x' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B52:no:A1:B52:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Price Parity' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1793oh10w9cswx11p1wmx0yyv04x' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B52:no:A1:B52:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Price Parity' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B52:no:A1:B52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_922C410C6C4F4519A8D360365DA8194A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price Parity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price Parity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Price Parity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_922C410C6C4F4519A8D360365DA8194A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_922C410C6C4F4519A8D360365DA8194A]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_922C410C6C4F4519A8D360365DA8194A'>
            <properties context=''>
              <relation connection='excel-direct.1793oh10w9cswx11p1wmx0yyv04x' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B52:no:A1:B52:0' header='yes' outcome='6'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='real' name='Price Parity' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
      <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1d1p75w11ycw4k1gr9r7v1m6x57i'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.004rffa0wr2hue14pxiry0mqlsc0' target='federated.1d1p75w11ycw4k1gr9r7v1m6x57i'>
      <column-mapping>
        <map key='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]' value='[federated.1d1p75w11ycw4k1gr9r7v1m6x57i].[none:State:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter States' name='[Action1_9AF174E762EE441082BB3B3400A2070B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top states for data jobs' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Top states for data jobs' />
        <param name='on-empty' value='none' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Best fit lines over time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
          </datasources>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='Case Received Date' datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Max' name='[max:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Min' name='[min:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='Year-Trunc' name='[tyr:CASE_RECEIVED_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='Year' name='[yr:CASE_RECEIVED_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;data scientist&quot;</bucket>
              <bucket>&quot;software engineer&quot;</bucket>
              <bucket>&quot;data analyst&quot;</bucket>
              <bucket>&quot;business analyst&quot;</bucket>
              <bucket>&quot;assistant professor&quot;</bucket>
              <bucket>&quot;attorney&quot;</bucket>
              <bucket>&quot;management consultant&quot;</bucket>
              <bucket>&quot;teacher&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[yr:CASE_RECEIVED_DATE:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:CASE_RECEIVED_DATE:ok]' />
              <groupfilter function='member' level='[yr:CASE_RECEIVED_DATE:ok]' member='2008' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[yr:CASE_RECEIVED_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.18591159582138062' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.004rffa0wr2hue14pxiry0mqlsc0].[max:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.004rffa0wr2hue14pxiry0mqlsc0].[min:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk] + ([federated.004rffa0wr2hue14pxiry0mqlsc0].[max:PAID_WAGE_PER_YEAR:qk] + [federated.004rffa0wr2hue14pxiry0mqlsc0].[min:PAID_WAGE_PER_YEAR:qk]))</rows>
        <cols>[federated.004rffa0wr2hue14pxiry0mqlsc0].[tyr:CASE_RECEIVED_DATE:qk]</cols>
      </table>
      <simple-id uuid='{ADE4D9F2-9D8E-4000-8D06-449B186BA289}' />
    </worksheet>
    <worksheet name='Checking for outliers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Expected Salary&gt;&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>These data came from the OFLC website
</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
          </datasources>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='Case Number' datatype='string' name='[CASE_NUMBER]' role='dimension' type='nominal' />
            <column datatype='string' name='[Case Number (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CASE_NUMBER]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;I-200-13077-839340, I-200-13081-043757, I-200-13081-136705 and 2 more&quot;'>
                  <value>&quot;I-200-13077-839340&quot;</value>
                  <value>&quot;I-200-13081-043757&quot;</value>
                  <value>&quot;I-200-13081-136705&quot;</value>
                  <value>&quot;I-200-13087-022976&quot;</value>
                  <value>&quot;I-203-14021-228428&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CASE_NUMBER]' derivation='None' name='[none:CASE_NUMBER:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[Case Number (group)]'>
            <groupfilter function='member' level='[Case Number (group)]' member='&quot;Other&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[Case Number (group)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:CASE_NUMBER:nk]' />
              <color column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[Case Number (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='0.38381215929985046' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</cols>
      </table>
      <simple-id uuid='{D6742807-2A2F-4770-8A71-A2A6391315F2}' />
    </worksheet>
    <worksheet name='Companies that pay below prevailing wage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
          </datasources>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='Difference btwn prevailing wage and paid wage' datatype='real' name='[Calculation_1114640975898054659]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR] - [PREVAILING_WAGE_PER_YEAR]' />
            </column>
            <column caption='Paying less than prevailing wage' datatype='string' name='[Calculation_1114640975898562564]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1114640975898054659] &lt; 0&#13;&#10;THEN &quot;Paying less than prevailing wage&quot;&#13;&#10;ELSE &quot;Paying prevailing wage or higher&quot;&#13;&#10;END' />
            </column>
            <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='Median' caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1114640975898054659]' derivation='Count' name='[cnt:Calculation_1114640975898054659:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1114640975898562564]' derivation='None' name='[none:Calculation_1114640975898562564:nk]' pivot='key' type='nominal' />
            <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[cnt:Calculation_1114640975898054659:qk]' included-values='in-range'>
            <min>5</min>
            <max>21</max>
          </filter>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:Calculation_1114640975898562564:nk]'>
            <groupfilter function='member' level='[none:Calculation_1114640975898562564:nk]' member='&quot;Paying less than prevailing wage&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;software engineer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:Calculation_1114640975898562564:nk]</column>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[cnt:Calculation_1114640975898054659:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[cnt:Calculation_1114640975898054659:qk]' />
              <color column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[cnt:Calculation_1114640975898054659:qk]' />
              <text column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
              <text column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:EMPLOYER_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A363F0C9-4248-464D-A5B1-4F4B9D5C8609}' />
    </worksheet>
    <worksheet name='Jobs by state'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Work State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[WORK_STATE]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;ALABAMA&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;ALABAMA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CALIFORNIA&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;CALIFORNIA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;COLORADO&quot;'>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;COLORADO&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;MAINE&quot;'>
                  <value>&quot;MAINE&quot;</value>
                  <value>&quot;ME&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;MASSACHUSETTS&quot;'>
                  <value>&quot;MA&quot;</value>
                  <value>&quot;MASSACHUSETTS&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NEW HAMPSHIRE&quot;'>
                  <value>&quot;NEW HAMPSHIRE&quot;</value>
                  <value>&quot;NH&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NEW YORK&quot;'>
                  <value>&quot;NEW YORK&quot;</value>
                  <value>&quot;NY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NORTH CAROLINA&quot;'>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;NORTH CAROLINA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;TEXAS&quot;'>
                  <value>&quot;TEXAS&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;WASHINGTON&quot;'>
                  <value>&quot;WA&quot;</value>
                  <value>&quot;WASHINGTON&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='level-members' level='[none:JOB_TITLE_SUBGROUP:nk]' />
          </filter>
          <manual-sort column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;data scientist&quot;</bucket>
              <bucket>&quot;software engineer&quot;</bucket>
              <bucket>&quot;data analyst&quot;</bucket>
              <bucket>&quot;business analyst&quot;</bucket>
              <bucket>&quot;attorney&quot;</bucket>
              <bucket>&quot;assistant professor&quot;</bucket>
              <bucket>&quot;management consultant&quot;</bucket>
              <bucket>&quot;teacher&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.004rffa0wr2hue14pxiry0mqlsc0].[Work State (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk] / [federated.004rffa0wr2hue14pxiry0mqlsc0].[Work State (group)])</cols>
      </table>
      <simple-id uuid='{7E108E3D-BAAA-4498-9A0A-D478257534D0}' />
    </worksheet>
    <worksheet name='Median wage per subgroup'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Expected Salary&gt;&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>These data came from the OFLC website
</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
          </datasources>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</rows>
        <cols>[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]</cols>
      </table>
      <simple-id uuid='{8A83E87B-6766-40D4-A3F6-6E880C333FAB}' />
    </worksheet>
    <worksheet name='Salary adjusted for cost of living'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
            <datasource caption='Sheet1 (price_parity)' name='federated.1d1p75w11ycw4k1gr9r7v1m6x57i' />
          </datasources>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='States we are interested in' datatype='string' name='[Calculation_1114640975895097346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [WORK_STATE] = &quot;California&quot;&#13;&#10;OR [WORK_STATE] = &quot;Washington&quot;&#13;&#10;OR [WORK_STATE] = &quot;Texas&quot;&#13;&#10;OR [WORK_STATE] = &quot;Alabama&quot;&#13;&#10;OR [WORK_STATE] = &quot;North Carolina&quot;&#13;&#10;OR [WORK_STATE] = &quot;New York&quot;&#13;&#10;OR [WORK_STATE] = &quot;Massachusetts&quot;&#13;&#10;OR [WORK_STATE] = &quot;Maine&quot;&#13;&#10;THEN &quot;View&quot;&#13;&#10;ELSE &quot;Don&apos;t View&quot;&#13;&#10;END' />
            </column>
            <column caption='Adjusted paid wage' datatype='real' name='[Calculation_1114640976280330245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR]) / ATTR([federated.1d1p75w11ycw4k1gr9r7v1m6x57i].[Price Parity])) * 100' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1114640975895097346]' derivation='None' name='[none:Calculation_1114640975895097346:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[usr:Calculation_1114640976280330245:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1d1p75w11ycw4k1gr9r7v1m6x57i'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976280330245:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:Calculation_1114640975895097346:nk]'>
            <groupfilter function='member' level='[none:Calculation_1114640975895097346:nk]' member='&quot;View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:Calculation_1114640975895097346:nk]</column>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.004rffa0wr2hue14pxiry0mqlsc0].[Multiple Values]</rows>
        <cols>([federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk] / ([federated.1d1p75w11ycw4k1gr9r7v1m6x57i].[none:State:nk] / [federated.004rffa0wr2hue14pxiry0mqlsc0].[:Measure Names]))</cols>
        <join-lod-include-overrides>
          <column>[federated.1d1p75w11ycw4k1gr9r7v1m6x57i].[State]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{739DA489-0A9E-4513-8D85-F156B977F5C8}' />
    </worksheet>
    <worksheet name='Salary over time using boxplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
          </datasources>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='Case Received Date' datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='Year' name='[yr:CASE_RECEIVED_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;data analyst&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]' field-type='quantitative' max='300000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>[federated.004rffa0wr2hue14pxiry0mqlsc0].[yr:CASE_RECEIVED_DATE:ok]</cols>
      </table>
      <simple-id uuid='{1848DA91-7DBD-4EBD-A744-66212A67C204}' />
    </worksheet>
    <worksheet name='Top companies for data jobs'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
            <datasource name='Parameters' />
            <datasource caption='Sheet1 (price_parity)' name='federated.1d1p75w11ycw4k1gr9r7v1m6x57i' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='Adjusted paid wage' datatype='real' name='[Calculation_1114640976280330245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR]) / ATTR([federated.1d1p75w11ycw4k1gr9r7v1m6x57i].[Price Parity])) * 100' />
            </column>
            <column caption='In Top X?' datatype='boolean' name='[Calculation_1114640976291721225]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_1114640976280330245]) &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Sheet1' datatype='integer' name='[__tableau_internal_object_id__].[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_2010FBD98FA040F29494BE5E5DA5F978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:ok:20]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[EMPLOYER_NAME]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[usr:Calculation_1114640976280330245:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1114640976291721225]' derivation='User' name='[usr:Calculation_1114640976291721225:nk:7]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:EMPLOYER_NAME:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1d1p75w11ycw4k1gr9r7v1m6x57i'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[Action (Job Title Subgroup,Work State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_9AF174E762EE441082BB3B3400A2070B]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[JOB_TITLE_SUBGROUP]' member='&quot;attorney&quot;' />
              <groupfilter function='member' level='[WORK_STATE]' member='&quot;California&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='level-members' level='[none:JOB_TITLE_SUBGROUP:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976291721225:nk:7]'>
            <groupfilter function='member' level='[usr:Calculation_1114640976291721225:nk:7]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976291721225:nk:7]</column>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[Action (Job Title Subgroup,Work State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:ok:20]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[__tableau_internal_object_id__].[cnt:Sheet1_2010FBD98FA040F29494BE5E5DA5F978:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk] / ([federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk] / ([federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:ok:20] / [federated.004rffa0wr2hue14pxiry0mqlsc0].[none:EMPLOYER_NAME:nk])))</rows>
        <cols>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976280330245:qk]</cols>
      </table>
      <simple-id uuid='{940F5A6E-5D05-4E32-B0B0-97C83A91D13F}' />
    </worksheet>
    <worksheet name='Top states for data jobs'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
            <datasource name='Parameters' />
            <datasource caption='Sheet1 (price_parity)' name='federated.1d1p75w11ycw4k1gr9r7v1m6x57i' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='Adjusted paid wage' datatype='real' name='[Calculation_1114640976280330245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR]) / ATTR([federated.1d1p75w11ycw4k1gr9r7v1m6x57i].[Price Parity])) * 100' />
            </column>
            <column caption='In Top X?' datatype='boolean' name='[Calculation_1114640976291721225]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_1114640976280330245]) &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[rank:usr:Calculation_1114640976280330245:ok:4]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[WORK_STATE]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_1114640976280330245]' derivation='User' name='[usr:Calculation_1114640976280330245:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1114640976291721225]' derivation='User' name='[usr:Calculation_1114640976291721225:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[WORK_STATE]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1d1p75w11ycw4k1gr9r7v1m6x57i'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='level-members' level='[none:JOB_TITLE_SUBGROUP:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976291721225:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_1114640976291721225:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976291721225:nk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:ok:4]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' />
              <text column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976280330245:qk]</rows>
        <cols>([federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk] / ([federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:ok:4] / [federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]))</cols>
      </table>
      <simple-id uuid='{E712FF21-8D66-4BBC-B610-309F8D5C5744}' />
    </worksheet>
    <worksheet name='Visa class on paid wage'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Expected Salary&gt;&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>These data came from the OFLC website
</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
          </datasources>
          <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Sheet1' datatype='integer' name='[__tableau_internal_object_id__].[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]' role='measure' type='quantitative' />
            <column caption='Visa Class' datatype='string' name='[VISA_CLASS]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Sheet1_2010FBD98FA040F29494BE5E5DA5F978]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_2010FBD98FA040F29494BE5E5DA5F978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[VISA_CLASS]' derivation='None' name='[none:VISA_CLASS:nk]' pivot='key' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Stdev' name='[std:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:VISA_CLASS:nk]' value='32' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[__tableau_internal_object_id__].[cnt:Sheet1_2010FBD98FA040F29494BE5E5DA5F978:qk]' />
              <lod column='[federated.004rffa0wr2hue14pxiry0mqlsc0].[std:PAID_WAGE_PER_YEAR:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([federated.004rffa0wr2hue14pxiry0mqlsc0].[none:VISA_CLASS:nk] / [federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk])</cols>
      </table>
      <simple-id uuid='{7687CEE2-6568-4124-B261-EF8CF1D1631B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.004rffa0wr2hue14pxiry0mqlsc0' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.004rffa0wr2hue14pxiry0mqlsc0'>
        <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
        <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='49000' id='3' param='vert' type-v2='layout-flow' w='82400' x='800' y='1000'>
              <zone h='49000' id='5' param='vert' type-v2='layout-flow' w='82400' x='800' y='1000'>
                <zone h='49000' id='6' name='Top states for data jobs' w='82400' x='800' y='1000'>
                  <layout-cache minheight='251' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='49000' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7625' id='12' mode='dropdown' name='Top states for data jobs' param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' type-v2='filter' values='database' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='10' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83200' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='11' name='Top companies for data jobs' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7625' id='12' mode='dropdown' name='Top states for data jobs' param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' type-v2='filter' values='database' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='6' is-fixed='true' name='Top states for data jobs' w='82400' x='800' y='1000'>
                  <layout-cache minheight='251' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='10' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83200' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Top companies for data jobs' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4FD8151F-91F3-4A49-BF3B-86697E5F3689}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Median wage per subgroup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8E540302-9686-4A62-8981-9419F1E50477}' />
    </window>
    <window class='worksheet' name='Checking for outliers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[Case Number (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:CASE_NUMBER:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:PAID_WAGE_PER_YEAR:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E10F5A01-B996-4E99-9FFB-23D2EE4C77D0}' />
    </window>
    <window class='worksheet' name='Visa class on paid wage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:VISA_CLASS:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DFAB4DB-7FA3-4BC2-9B2A-C131AB05CA1D}' />
    </window>
    <window class='worksheet' name='Jobs by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[Work State (group)]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7160ED0B-48BE-405C-A99E-2C1D439D25D4}' />
    </window>
    <window class='worksheet' name='Best fit lines over time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[yr:CASE_RECEIVED_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA560BD1-0A89-4E01-9959-02687E1EE96F}' />
    </window>
    <window class='worksheet' name='Salary over time using boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[:Measure Names]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[yr:CASE_RECEIVED_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{519C02C5-18B6-49B8-9286-84E033DE06D9}' />
    </window>
    <window class='worksheet' name='Companies that pay below prevailing wage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[cnt:Calculation_1114640975898054659:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[cnt:Calculation_1114640975898054659:qk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:Calculation_1114640975895097346:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:Calculation_1114640975898562564:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:EMPLOYER_NAME:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21671887-4F8F-4924-B730-994F96B1C960}' />
    </window>
    <window class='worksheet' name='Salary adjusted for cost of living'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[:Measure Names]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[med:PAID_WAGE_PER_YEAR:qk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:Calculation_1114640975895097346:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1d1p75w11ycw4k1gr9r7v1m6x57i].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53BF6B3E-2626-467E-AC32-2853BF1B7102}' />
    </window>
    <window class='worksheet' name='Top states for data jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:Calculation_1114640975895097346:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:ok]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976280330245:ok]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976291721225:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FD0609C-C686-41DD-8EF0-CF97439DA1AB}' />
    </window>
    <window class='worksheet' maximized='true' name='Top companies for data jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:EMPLOYER_NAME:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:ok:20]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976291721225:nk:4]</field>
            <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976291721225:nk:7]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0684D0F9-23B5-4169-A118-78B2B9A4664B}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Top companies for data jobs' />
        <viewpoint name='Top states for data jobs'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
                      <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:ok:4]</field>
                      <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976280330245:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]</field>
                    <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:WORK_STATE:nk]</field>
                    <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[usr:Calculation_1114640976280330245:qk]</field>
                    <field>[federated.004rffa0wr2hue14pxiry0mqlsc0].[rank:usr:Calculation_1114640976280330245:ok:4]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;attorney&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>130206.14425645593</value>
                  <value>4</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.004rffa0wr2hue14pxiry0mqlsc0].[none:JOB_TITLE_SUBGROUP:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{F33641E2-D837-4925-8280-0159AA0D47C4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Best fit lines over time' width='192'>
      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
      X2P/8AGiIOo2FcwLP+xdt3chjTn+WX7p6B8Qjb6CVzy67uv7GsN99w+/hhrZS6lQ5hMvPntP
      fksGF0KgtUYphTUmN012r89YkHLjxnBW18iqH+INPY+Qj4cIB/h4oy+5RlGRd995k0//9K/0
      zL99/TIzKzEHRkNuL1Ypj42zdPs2BCGjw0XKvkBHk0xPDGFNikkW1tjnd+wxVqd1D84kXvlZ
      Zxymmw91vViVPsAA90dPDnD+nR9y+sJVXv7sz3Di4ERf7nf+/Dl85XP0qaNcOvceFI/0XhAz
      d4FQnya3PXYX27XaG7s6bNemdcUtIHqVWXvvJxxdGqI1iUDL6Ezck94dt915bRNS0VVc3HNN
      7/gD8sR98npe17++on2/NR2ruDfekwC++fV/gZERV2/c4ktf/mWOTE+uKWG5dvkiH168yvPP
      nODu/BITe/ezcPMahCXGhiJGIp+KjTi0d3ywJPJxoK0Z6vzSK2z7pK9Ns/e5R1cZ+6Ayqzq3
      B9/vgWVa5uX96r+qk+zuIPPFUr0IoLqyRKXWAGBoZIxyMVxbZF0YEMDugElXECpEyJ2ruXrU
      6DnjUR4eZXnmGvMrFRYXK9tdp10PazUmq3LP6rMdjKx6nqV3/jwrZ/+mMzveJZi/cpdv/E//
      kkvf29i2KH2n/O7OzXPhzI+4fuvuhiv3JMJaQ+3i32P53b9EuvLe467OQ8PqOliD1TVga/aI
      3Qrc/fAmK3cWufHe5Q1d31cLdGDfPpZqmomJEYy1yMegVWks17hz/gYHXjhCUNqcGLZtsAbd
      uI7VVUy8wzuPrhlhb/hlvAN/h8LQXsB3GyWvEqvXTIJ1Sc6dYD7LbC3WWDdzbVzY2q6wsVhj
      2uXacWO70rqv7UrvOmMsUimi0RLlyREuvnG2b7lV8S70JYBrt+7wzMnD/PAPfxfxS/8mTx8Y
      39S73gje/50/5vbZ66zcWeSlP/XZLX9e94um/RFb4TUfbO2L7vrIOvrrZOYKpvoClcqddmOg
      q6zp9cHXfvyuuDH5h4Qeg0i6xrN2VdrqIravVNZcqXPz/SsExQscfPk4UrWEA3GvRrl7rfUa
      TZNb1y8RUrhDiE5cCIRytkZr8+WquED63qoy5OlCynYZIQSJ1twIAvYenWJipAite7TLi1Xl
      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
      9gfwSauKkz7jhAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Checking for outliers' width='192'>
      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
      Lxt/j/8P7VzGZJSosw8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Companies that pay below prevailing wage' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TQRASLR/A2m8iU6PkgZ0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Jobs by state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median wage per subgroup' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salary adjusted for cost of living' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salary over time using boxplot' width='192'>
      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
      Dhw48KHnT/8fUhWAaQxZkssAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='187' name='Top companies for data jobs' width='192'>
      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
      /g/GypZBbDhMxwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top states for data jobs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Visa class on paid wage' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
